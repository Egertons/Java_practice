/*
		内部类：    //内置类、嵌套类
					将一个类定义在另一个类的里面，对里面那个类就称作内部类。
					
					访问特点：
							内部类可以直接访问外部类中的成员。包括私有成员。
							而外部类要访问内部类中的成员必须建立内部类的对象。
*/
public class demo
{
	public static void main(String[] args)
	{
		//对于直接访问内部类，，直接在主函数上创建内部类对象的方法。
		q.jj zhanglin = new q().new jj();
					//前面后面都要符合这个定义规则   即：可以直接创建内部类对象，但是要依级创建。
								//当然，如果，内部类被私有的话，就不能这么创建了，实际上如果被私有的话，压根儿就创建不了了。
	}
}


class q
{
	int wu;
	public void show()
	{
		System.out.println("外部");
	}
	class jj  //内部类对于其外部类的资源访问是不需要建立对象的，直接调用即可。（私有的变量和函数也能直接调用，毕竟私有本类皆有效嘛）
	{
		private class uu   //在内部类中class前面是可以写私有的，这是内部类的一个特性。
		{
			//理论上，内部类的嵌套没有限制。  并且无论嵌套多少层，最内部类依然可以调用所有外部类的函数和变量。
		}
		void hh()
		{
			System.out.println("内部");
		}
	}
}
/*
		类A  和  类B是两个外部类。
				类A中有一个内部类C
				类B中也有一个内部类，，并且  其命名也可以命名为C（因为内部类是外部类的所属产物，故而其存在在两片不同的内存空间中，可以重名）
*/